generator client {
  provider        = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

/// ðŸŽ­ **Utilisateur avec SSO & Profil dÃ©taillÃ©**
model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  username  String    @unique
  email     String    @unique
  password  String? // Nullable pour SSO
  role      Role      @default(USER) // Enum : User, Auteur, Admin
  profile   Json? // Remplace `Profile`
  social    Json? // Remplace `Social`
  sso       Json? // Remplace `SSO`
  first_name String
  last_name String
  createdAt DateTime  @default(now())
  updatedAt DateTime @default(now())
  deletedAt DateTime?
}

/// ðŸ“‘ **Article avec Commentaires intÃ©grÃ©s**
model Article {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  title       String
  slug        String    @unique
  shortDesc   String
  content     String
  authorId    String    @db.ObjectId
  tags        String[]
  isPublished Boolean
  publishedAt DateTime?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime
  seoTitle    String?
  seoDesc     String?
  comments    Json // Remplace `Comment[]`
}

/// ðŸ“Š **Statistiques de l'Article**
model Stats {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  views     Int
  likes     Int
  comments  Int
  createdAt DateTime @default(now())
  updatedAt DateTime
}

enum Role {
  USER
  AUTHOR
  ADMIN
}
